package build

import $ivy.`io.github.nguyenyou::mill-scalablytyped::0.0.2`
import $ivy.`com.lihaoyi::mill-contrib-sonatypecentral:`
import $ivy.`com.goyeau::mill-scalafix::0.5.0`
import $ivy.`com.lihaoyi::mill-contrib-buildinfo:`

import mill._, scalalib._, scalajslib._, scalajslib.api._, publish._
import io.github.nguyenyou.mill.scalablytyped._
import mill.contrib.sonatypecentral.SonatypeCentralPublishModule
import com.goyeau.mill.scalafix.ScalafixModule
import $ivy.`de.tototec::de.tobiasroeser.mill.vcs.version::0.4.1`
import de.tobiasroeser.mill.vcs.version.VcsVersion
import mill.contrib.sonatypecentral.SonatypeCentralPublishModule.{
  defaultAwaitTimeout,
  defaultConnectTimeout,
  defaultReadTimeout,
}
import mill.contrib.buildinfo.BuildInfo

object Versions {
    val scala3 = "3.7.0"
    val sjs = "1.19.0"
    val sjsdom = "2.8.0"
    val laminar = "17.2.1"
    val waypoint = "10.0.0-M1"
    val borer = "1.16.1"
    val scalajsdom = "2.8.0"
    val `webawesome-laminar` = "0.0.1"
    val sourcecode = "0.4.3-M5"
    val webawesome = "0.0.1"
}

object Constants {
  val repoUrl = "https://github.com/nguyenyou/webawesome-laminar"
  val githubUsername = "nguyenyou"
  val githubProfile = s"https://github.com/$githubUsername"
  val author = "Tu Nguyen"
  val organization = "io.github.nguyenyou"
  val description = "Laminar wrappers for WebAwesome"
}

trait Scalafix extends ScalafixModule {
  def scalacOptions = super.scalacOptions() ++ Seq("-Wunused:all", "-Wunused:imports")
}

trait NoDoc extends ScalaModule {
  override def docJar = T {
    val outPath = T.dest / "empty-doc.jar"
    os.write(outPath, Array.emptyByteArray)
    PathRef(outPath)
  }
}

trait CommonPublish extends SonatypeCentralPublishModule {

}


object Deps {
  val laminar = Seq(
    ivy"com.raquo::laminar::${Versions.laminar}"
  )

  val scalajsDom = Seq(
    ivy"org.scala-js::scalajs-dom::${Versions.scalajsdom}"
  )

  val waypoint = Seq(
    ivy"com.raquo::waypoint::${Versions.waypoint}"
  )

  val borer = Seq(
    ivy"io.bullet::borer-core::${Versions.borer}",
    ivy"io.bullet::borer-derivation::${Versions.borer}",
  )

  val sourcecode = Seq(
    ivy"com.lihaoyi::sourcecode::${Versions.sourcecode}"
  )
}


trait WebModule extends ScalaJSModule with NoDoc with Scalafix {
  def moduleKind = ModuleKind.ESModule
  def moduleSplitStyle = ModuleSplitStyle.FewestModules

  def scalaVersion = Versions.scala3
  def scalaJSVersion = Versions.sjs

  def ivyDeps = Agg(
    ivy"com.raquo::laminar::${Versions.laminar}",
    ivy"org.scala-js::scalajs-dom::${Versions.sjsdom}"
  )

  object test extends ScalaJSTests with TestModule.Utest {
    def utestVersion = "0.8.5"
    def moduleKind = ModuleKind.NoModule
  }

  def jsEnvConfig = Task {
    JsEnvConfig.JsDom()
  }
}

object doc extends WebModule {
  def moduleDeps = Seq(
    `webawesome-laminar`
  )

  def ivyDeps = super.ivyDeps() ++ Deps.waypoint ++ Deps.borer ++ Deps.sourcecode
}

object `webawesome-laminar` extends WebModule with CommonPublish {
  override def artifactName = "webawesome-laminar"

  def publishVersion = VcsVersion.vcsState().format()

  def pomSettings = PomSettings(
    description = Constants.description,
    organization = Constants.organization,
    url = Constants.repoUrl,
    licenses = Seq(License.MIT),
    versionControl = VersionControl.github(Constants.githubUsername, "webawesome-laminar"),
    developers = Seq(Developer(Constants.githubUsername, Constants.author, Constants.githubProfile)),
  )
}


object `webawesome` extends WebModule with ScalablyTyped with CommonPublish {
  def artifactName = "webawesome"
  def publishVersion = Versions.`webawesome`

  def pomSettings = PomSettings(
    description = "WebAwesome Facades",
    organization = "io.github.nguyenyou",
    url = "https://github.com/nguyenyou/webawesome-laminar",
    licenses = Seq(License.MIT),
    versionControl = VersionControl.github("nguyenyou", "webawesome-laminar"),
    developers = Seq(Developer("nguyenyou", "Nguyen You", "https://github.com/nguyenyou")),
  )

  def ivyDeps = super.ivyDeps() ++ Deps.scalajsDom
  override def stIgnoredLibs: T[Seq[String]] = T {
    Seq.empty[String]
  }
  override def stOutputPackage = "io.github.nguyenyou.webawesome"
  override def stOutputPath = moduleDir / "src"
  override def stMinimize = MinimizeSelection.AllExcept(
    "@awesome.me/webawesome"
  )
}